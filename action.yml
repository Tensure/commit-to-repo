name: 'Commit To Repo'
description: 'Commits local files specified to a repository.'
inputs:
  branch:
    description: 'An optional repository branch to checkout and commit to. Will use whatever the default branch of the destination repo is, if not specified.'
    required: false
    default: ''
  files:
    description: 'A list of local files to commit.'
    required: true
  github-pat:
    description: 'A custom token to use.'
    required: false
    default: ''
  github-app-id:
    description: 'The app ID of a Github App. Do not provide if github-pat-token is provided.'
    required: false
    default: ''
  github-app-private-key:
    description: 'The private key for a Github App. Do not provide if github-pat-token is provided.'
    required: false
  github-owner:
    description: 'The Github owner of the repository.'
    required: true
  github-repository:
    description: 'The Github repository to commit to.'
    required: true
runs:
  using: "composite"
  steps:
    - name: Output PAT To Environment
      if: ${{ inputs.github-pat != '' }}
      shell: bash
      run: |
        echo "Attempting to use PAT credential...";
        echo "GITHUB_TOKEN=${{ inputs.github-pat }}" >> ${GITHUB_ENV}

    - name: Get Token From App
      if: ${{ inputs.github-app-id != '' && inputs.github-app-private-key != '' }}
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.github-app-id }}
        private-key: ${{ inputs.github-app-private-key }}
        owner: ${{ inputs.github-owner }}
        repositories: ${{ inputs.github-repository }}

    - name: Output App Token To Environment
      if: ${{ inputs.github-app-id != '' && inputs.github-app-private-key != '' }}
      shell: bash
      run: |
        echo "Attempting to use Github App credentials..."
        echo "GITHUB_TOKEN=${{ steps.app-token.outputs.token }}" >> ${GITHUB_ENV}

    - name: Save Environment Variable As Output
      id: output-values
      shell: bash
      run: |
        echo "TOKEN=${GITHUB_TOKEN}" >> ${GITHUB_OUTPUT}

    - name: List files
      shell: bash
      run: |
        ls -latr

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
        token: ${{ steps.output-values.outputs.TOKEN }}
        repository: ${{ inputs.github-owner }}/${{ inputs.github-repository }}
        persist-credentials: false
        path: commit-this-repo

    - name: List files
      shell: bash
      run: |
        ls -latr

    - name: Copy files
      shell: bash
      working-directory: commit-this-repo
      run: |
        while IFS= read -r FILE; do

          echo "Adding file: ${FILE}";
          cp ../${FILE} ./${FILE}
          git add ${FILE}

        done <<< '${{ inputs.files }}'

        git commit -m "Manifest patched from ${{ github.ref }}"
        git push