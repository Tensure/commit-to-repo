name: 'Commit To Repo'
description: 'Commits local files specified to a repository.'
inputs:
  branch:
    description: 'An optional repository branch to checkout and commit to. Will use whatever the default branch of the destination repo is, if not specified.'
    required: false
    default: ''
  files:
    description: 'A list of local files to commit.'
    required: true
  github-pat:
    description: 'A custom token to use.'
    required: false
    default: ''
  github-app-id:
    description: 'The app ID of a Github App. Do not provide if github-pat-token is provided.'
    required: false
    default: ''
  github-app-private-key:
    description: 'The private key for a Github App. Do not provide if github-pat-token is provided.'
    required: false
  github-owner:
    description: 'The Github owner of the repository.'
    required: true
  github-repository:
    description: 'The Github repository to commit to.'
    required: true
  path:
    description: 'An optional path in the destination repository to place the files.'
    required: false
    default: '.'
runs:
  using: "composite"
  steps:
    - name: Output PAT To Environment
      if: ${{ inputs.github-pat != '' }}
      shell: bash
      run: |
        echo "Attempting to use PAT credential...";
        echo "GITHUB_TOKEN=${{ inputs.github-pat }}" >> ${GITHUB_ENV}

    - name: Get Token From App
      if: ${{ inputs.github-app-id != '' && inputs.github-app-private-key != '' }}
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.github-app-id }}
        private-key: ${{ inputs.github-app-private-key }}
        owner: ${{ inputs.github-owner }}
        repositories: ${{ inputs.github-repository }}

    - name: Output App Token To Environment
      if: ${{ inputs.github-app-id != '' && inputs.github-app-private-key != '' }}
      shell: bash
      run: |
        echo "Attempting to use Github App credentials..."
        echo "GITHUB_TOKEN=${{ steps.app-token.outputs.token }}" >> ${GITHUB_ENV}

    - name: Clone Destination Repo
      shell: bash
      run: |
        # set variables
        REPO="${{ inputs.github-owner }}/${{ inputs.github-repository }}"
        BRANCH=""
        if [[ ! -z "${{ inputs.branch }}" ]]; then
          BRANCH="-b ${{ inputs.branch }}";
        fi

        # make sure the destination directory doesn't exist & clone the repo
        rm -rf ${{ inputs.github-repository }}
        git clone ${BRANCH} https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git

    - name: Add Files
      shell: bash
      run: |
        # change directory to repo created
        cd ${{ inputs.github-repository }}

        ls -latr
        ls -latr ../

        # make sure path exists
        mkdir -p "${{ inputs.path }}"

        # loop over files
        while IFS= read -r FILE; do
          cp ../${FILE} ${{ inputs.path }}/${FILE}
          git add ${{ inputs.path }}/${FILE}
        done <<< '${{ inputs.files }}'

    - name: Commit Changes
      shell: bash
      run: |
        git commit -m "Patched in ${{ github.repository }}:${GITHUB_SHA}"
        git push origin